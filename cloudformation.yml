Resources:
  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: smartPhotosAlbum

  ApiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ApiGateway
      PathPart: "search"
      ParentId: !GetAtt ApiGateway.RootResourceId

  ApiGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId: !Ref ApiGatewayResource
      RestApiId: !Ref ApiGateway
      AuthorizationType: NONE
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations
        RequestTemplates:
          application/json: '{"q": "$input.params(''q'')"}'
        IntegrationResponses:
        - ResponseTemplates:
            application/json: "$input.body"
          StatusCode: 200
      RequestParameters:
        method.request.querystring.q: true
      MethodResponses:
      - ResponseModels:
          application/json: "Empty"
        StatusCode: 200

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: spalambdabucket
        S3Key: lambda_function_2.zip
      Handler: lambda_function_2.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.9

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
